{"remainingRequest":"C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\@dicebear\\avatars\\lib\\model\\color\\collection\\modifier\\opacity\\variant.js","dependencies":[{"path":"C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\@dicebear\\avatars\\lib\\model\\color\\collection\\modifier\\opacity\\variant.js","mtime":1523531890000},{"path":"C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522520767055},{"path":"C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar color_1 = require(\"../../../../color\");\r\n/**\r\n * Returns the color in different transparency.\r\n */\r\nvar Variant = /*@__PURE__*/ (function () {\r\n    function Variant(collection, variants) {\r\n        this.pickedColors = {};\r\n        this.collection = collection;\r\n        this.variants = variants;\r\n    }\r\n    Variant.prototype.get = function (random) {\r\n        if (this.pickedColors[random.seed]) {\r\n            return this.pickedColors[random.seed];\r\n        }\r\n        var color = this.collection.get(random);\r\n        this.pickedColors[random.seed] = new color_1.default('rgb(' + color.rgb.join(',') + ')');\r\n        this.pickedColors[random.seed].alpha = random.pickone(this.variants);\r\n        return this.pickedColors[random.seed];\r\n    };\r\n    return Variant;\r\n}());\r\nexports.default = Variant;\r\n",null]}