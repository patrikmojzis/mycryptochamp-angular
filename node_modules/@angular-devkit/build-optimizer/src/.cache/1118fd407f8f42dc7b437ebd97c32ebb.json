{"remainingRequest":"C:\\Projects\\Cryptochamps\\web-interface\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Projects\\Cryptochamps\\web-interface\\node_modules\\@dicebear\\avatars\\lib\\model\\color\\collection\\modifier\\lightness\\brighter.js","dependencies":[{"path":"C:\\Projects\\Cryptochamps\\web-interface\\node_modules\\@dicebear\\avatars\\lib\\model\\color\\collection\\modifier\\lightness\\brighter.js","mtime":1523531890000},{"path":"C:\\Projects\\Cryptochamps\\web-interface\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522520767055},{"path":"C:\\Projects\\Cryptochamps\\web-interface\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar color_1 = require(\"../../../../color\");\r\n/**\r\n * Ensures that the selected color is lighter than a reference color.\r\n */\r\nvar Brighter = /*@__PURE__*/ (function () {\r\n    function Brighter(primaryCollection, secondaryCollection, difference) {\r\n        this.pickedColors = {};\r\n        this.primaryCollection = primaryCollection;\r\n        this.secondaryCollection = secondaryCollection;\r\n        this.difference = difference;\r\n    }\r\n    Brighter.prototype.get = function (random) {\r\n        if (this.pickedColors[random.seed]) {\r\n            return this.pickedColors[random.seed];\r\n        }\r\n        var primaryColor = this.primaryCollection.get(random);\r\n        var secondaryColor = this.secondaryCollection.get(random);\r\n        var primaryColorHsv = primaryColor.hsv;\r\n        var secondaryColorHsv = secondaryColor.hsv;\r\n        if (primaryColorHsv[2] >= secondaryColorHsv[2] + this.difference) {\r\n            return (this.pickedColors[random.seed] = primaryColor);\r\n        }\r\n        primaryColorHsv[2] = secondaryColorHsv[2] + this.difference;\r\n        if (primaryColorHsv[2] > 360) {\r\n            primaryColorHsv[2] = 360;\r\n        }\r\n        // Create new color instance and preserve alpha\r\n        this.pickedColors[random.seed] = new color_1.default('hsv(' + primaryColorHsv.join(',') + ')');\r\n        this.pickedColors[random.seed].alpha = primaryColor.alpha;\r\n        return this.pickedColors[random.seed];\r\n    };\r\n    return Brighter;\r\n}());\r\nexports.default = Brighter;\r\n",null]}