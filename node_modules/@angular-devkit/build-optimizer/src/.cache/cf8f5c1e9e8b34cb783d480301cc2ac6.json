{"remainingRequest":"C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\web3\\lib\\web3\\extend.js","dependencies":[{"path":"C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\web3\\lib\\web3\\extend.js","mtime":1498211747000},{"path":"C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522520767055},{"path":"C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var formatters = require('./formatters');\nvar utils = require('./../utils/utils');\nvar Method = require('./method');\nvar Property = require('./property');\n\n// TODO: refactor, so the input params are not altered.\n// it's necessary to make same 'extension' work with multiple providers\nvar extend = function (web3) {\n    /* jshint maxcomplexity:5 */\n    var ex = function (extension) {\n\n        var extendedObject;\n        if (extension.property) {\n            if (!web3[extension.property]) {\n                web3[extension.property] = {};\n            }\n            extendedObject = web3[extension.property];\n        } else {\n            extendedObject = web3;\n        }\n\n        if (extension.methods) {\n            extension.methods.forEach(function (method) {\n                method.attachToObject(extendedObject);\n                method.setRequestManager(web3._requestManager);\n            });\n        }\n\n        if (extension.properties) {\n            extension.properties.forEach(function (property) {\n                property.attachToObject(extendedObject);\n                property.setRequestManager(web3._requestManager);\n            });\n        }\n    };\n\n    ex.formatters = formatters; \n    ex.utils = utils;\n    ex.Method = Method;\n    ex.Property = Property;\n\n    return ex;\n};\n\n\n\nmodule.exports = extend;\n\n",null]}