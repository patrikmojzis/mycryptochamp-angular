{"remainingRequest":"C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\@dicebear\\avatars\\lib\\model\\color\\collection\\modifier\\lightness\\difference.js","dependencies":[{"path":"C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\@dicebear\\avatars\\lib\\model\\color\\collection\\modifier\\lightness\\difference.js","mtime":1523531890000},{"path":"C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522520767055},{"path":"C:\\Projects\\MyCryptoChamp\\prod\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar brighter_1 = require(\"./brighter\");\r\nvar darker_1 = require(\"./darker\");\r\n/**\r\n * Ensures that the selected color is darker or brighter than a reference color.\r\n */\r\nvar Difference = /*@__PURE__*/ (function () {\r\n    /**\r\n     * @param colors\r\n     * @param reference\r\n     * @param difference\r\n     */\r\n    function Difference(primaryCollection, secondaryCollection, difference) {\r\n        this.pickedColors = {};\r\n        this.primaryCollection = primaryCollection;\r\n        this.secondaryCollection = secondaryCollection;\r\n        this.brighter = new brighter_1.default(primaryCollection, secondaryCollection, difference);\r\n        this.darker = new darker_1.default(primaryCollection, secondaryCollection, difference);\r\n    }\r\n    /**\r\n     * Returns a color\r\n     *\r\n     * @param random\r\n     */\r\n    Difference.prototype.get = function (random) {\r\n        if (this.pickedColors[random.seed]) {\r\n            return this.pickedColors[random.seed];\r\n        }\r\n        var primaryColor = this.primaryCollection.get(random);\r\n        var secondaryColor = this.secondaryCollection.get(random);\r\n        var primaryColorHsv = primaryColor.hsv;\r\n        var secondaryColorHsv = secondaryColor.hsv;\r\n        if (primaryColorHsv[2] <= secondaryColorHsv[2]) {\r\n            return (this.pickedColors[random.seed] = this.darker.get(random));\r\n        }\r\n        else {\r\n            return (this.pickedColors[random.seed] = this.brighter.get(random));\r\n        }\r\n    };\r\n    return Difference;\r\n}());\r\nexports.default = Difference;\r\n",null]}