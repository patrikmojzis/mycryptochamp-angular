/*!
 * @dicebear/avatars@2.0.2:
 *   author: Florian KÃ¶rner
 *   license: MIT
 *   repository: https://github.com/DiceBear/avatars
 * 
 * pure-color@1.3.0:
 *   author: Nick Williams
 *   license: MIT
 *   repository: https://github.com/WickyNilliams/pure-color
 * 
 * seedrandom@2.4.3:
 *   author: David Bau
 *   license: MIT
 *   repository: https://github.com/davidbau/seedrandom
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("Avatars", [], factory);
	else if(typeof exports === 'object')
		exports["Avatars"] = factory();
	else
		root["Avatars"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./lib/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./lib/helper/random.js":
/*!******************************!*\
  !*** ./lib/helper/random.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var seedrandom = __webpack_require__(/*! seedrandom/seedrandom */ "./node_modules/seedrandom/seedrandom.js");
var Random = /** @class */ (function () {
    function Random(seed) {
        this.seed = seed;
        this.prng = seedrandom(seed);
    }
    Random.prototype.bool = function (likelihood) {
        if (likelihood === void 0) { likelihood = 50; }
        return this.prng() * 100 < likelihood;
    };
    Random.prototype.integer = function (min, max) {
        return Math.floor(this.prng() * (max - min + 1) + min);
    };
    Random.prototype.pickone = function (arr) {
        return arr[this.integer(0, arr.length - 1)];
    };
    return Random;
}());
exports.default = Random;
//# sourceMappingURL=random.js.map

/***/ }),

/***/ "./lib/index.js":
/*!**********************!*\
  !*** ./lib/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = __webpack_require__(/*! ./model/color */ "./lib/model/color.js");
var sprite_1 = __webpack_require__(/*! ./model/sprite */ "./lib/model/sprite.js");
var random_1 = __webpack_require__(/*! ./helper/random */ "./lib/helper/random.js");
var Avatars = /** @class */ (function () {
    /**
     * @param spriteCollection
     */
    function Avatars(spriteCollection) {
        this.spriteCollection = spriteCollection;
    }
    /**
     * Creates an avatar
     *
     * @param seed
     */
    Avatars.prototype.create = function (seed) {
        return '<svg ' + this.getSvgAttributes() + '>' + this.getSvgPaths(new random_1.default(seed)) + '</svg>';
    };
    /**
     * Get SVG attributes
     */
    Avatars.prototype.getSvgAttributes = function () {
        var attributes = __assign({}, (this.spriteCollection.options.svg || {}));
        var _a = attributes.viewBox
            .replace(/[^\d,]/g, '')
            .split(',')
            .map(function (val) { return parseInt(val); }), x = _a[0], y = _a[1];
        return Object.keys(attributes)
            .map(function (key) {
            return key + '="' + attributes[key] + '"';
        })
            .join(' ');
    };
    /**
     * Get generated SVG paths
     *
     * @param random
     */
    Avatars.prototype.getSvgPaths = function (random) {
        return this.spriteCollection.get(random).join('');
    };
    Avatars.model = {
        color: color_1.default,
        sprite: sprite_1.default
    };
    return Avatars;
}());
exports.default = Avatars;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./lib/model/color.js":
/*!****************************!*\
  !*** ./lib/model/color.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var hexToRgb = __webpack_require__(/*! pure-color/parse/hex */ "./node_modules/pure-color/parse/hex.js");
var rgbToHsv = __webpack_require__(/*! pure-color/convert/rgb2hsv */ "./node_modules/pure-color/convert/rgb2hsv.js");
var rgbToHex = __webpack_require__(/*! pure-color/convert/rgb2hex */ "./node_modules/pure-color/convert/rgb2hex.js");
var hsvToRgb = __webpack_require__(/*! pure-color/convert/hsv2rgb */ "./node_modules/pure-color/convert/hsv2rgb.js");
var collection_1 = __webpack_require__(/*! ./color/collection */ "./lib/model/color/collection.js");
var Color = /** @class */ (function () {
    function Color(color) {
        if (color === void 0) { color = '#000'; }
        this.alpha = 1;
        if (color[0] == '#') {
            this.hex = color;
        }
        else {
            var match = /(.*)\((.*)\)/.exec(color);
            if (match) {
                var values = match[2].split(',').map(function (val) { return parseInt(val.trim()); });
                switch (match[1].trim()) {
                    case 'rgb':
                        this.rgb = values;
                        break;
                    case 'rgba':
                        this.rgba = values;
                        break;
                    case 'hsv':
                        this.hsv = values;
                        break;
                    default:
                        throw new Error('Unsupported color format: ' + color);
                }
            }
            else {
                throw new Error('Unknown color format: ' + color);
            }
        }
    }
    Object.defineProperty(Color.prototype, "rgb", {
        get: function () {
            return (this.color.rgb = this.color.rgb || (this.color.hex ? this.hexToRgb(this.hex) : this.hsvToRgb(this.hsv)));
        },
        set: function (rgb) {
            if (rgb.length != 3) {
                throw new Error('An array with a length of 3 is expected.');
            }
            this.alpha = 1;
            this.color = {
                rgb: rgb
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Color.prototype, "rgba", {
        get: function () {
            return [this.rgb[0], this.rgb[1], this.rgb[2], this.alpha];
        },
        set: function (rgba) {
            if (rgba.length != 4) {
                throw new Error('An array with a length of 3 is expected.');
            }
            this.rgb = [rgba[0], rgba[1], rgba[2]];
            this.alpha = rgba[3];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Color.prototype, "hsv", {
        get: function () {
            return (this.color.hsv = this.color.hsv || this.rgbToHsv(this.rgb));
        },
        set: function (hsv) {
            if (hsv.length != 3) {
                throw new Error('An array with a length of 3 is expected.');
            }
            this.alpha = 1;
            this.color = {
                hsv: hsv
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Color.prototype, "hex", {
        get: function () {
            return (this.color.hex = this.color.hex || this.rgbToHex(this.rgb));
        },
        set: function (hex) {
            this.alpha = 1;
            this.color = {
                hex: hex
            };
        },
        enumerable: true,
        configurable: true
    });
    Color.prototype.rgbToHex = function (rgb) {
        return rgbToHex(rgb);
    };
    Color.prototype.hexToRgb = function (hex) {
        return hexToRgb(hex).map(function (val) { return Math.round(val); });
    };
    Color.prototype.rgbToHsv = function (rgb) {
        return rgbToHsv(rgb).map(function (val) { return Math.round(val); });
    };
    Color.prototype.hsvToRgb = function (hsv) {
        return hsvToRgb(hsv).map(function (val) { return Math.round(val); });
    };
    Color.collection = collection_1.default;
    return Color;
}());
exports.default = Color;
//# sourceMappingURL=color.js.map

/***/ }),

/***/ "./lib/model/color/collection.js":
/*!***************************************!*\
  !*** ./lib/model/color/collection.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var modifier_1 = __webpack_require__(/*! ./collection/modifier */ "./lib/model/color/collection/modifier.js");
var Collection = /** @class */ (function () {
    /**
     * @param colors
     */
    function Collection(colors) {
        this.pickedColors = {};
        this.colors = colors;
    }
    /**
     * Returns a color
     *
     * @param random
     */
    Collection.prototype.get = function (random) {
        return (this.pickedColors[random.seed] = this.pickedColors[random.seed] || random.pickone(this.colors));
    };
    Collection.modifier = modifier_1.default;
    return Collection;
}());
exports.default = Collection;
//# sourceMappingURL=collection.js.map

/***/ }),

/***/ "./lib/model/color/collection/modifier.js":
/*!************************************************!*\
  !*** ./lib/model/color/collection/modifier.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var lightness_1 = __webpack_require__(/*! ./modifier/lightness */ "./lib/model/color/collection/modifier/lightness.js");
var opacity_1 = __webpack_require__(/*! ./modifier/opacity */ "./lib/model/color/collection/modifier/opacity.js");
var Modifier = /** @class */ (function () {
    function Modifier() {
    }
    Modifier.lightness = lightness_1.default;
    Modifier.opacity = opacity_1.default;
    return Modifier;
}());
exports.default = Modifier;
//# sourceMappingURL=modifier.js.map

/***/ }),

/***/ "./lib/model/color/collection/modifier/lightness.js":
/*!**********************************************************!*\
  !*** ./lib/model/color/collection/modifier/lightness.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var brighter_1 = __webpack_require__(/*! ./lightness/brighter */ "./lib/model/color/collection/modifier/lightness/brighter.js");
var darker_1 = __webpack_require__(/*! ./lightness/darker */ "./lib/model/color/collection/modifier/lightness/darker.js");
var difference_1 = __webpack_require__(/*! ./lightness/difference */ "./lib/model/color/collection/modifier/lightness/difference.js");
var Lightness = /** @class */ (function () {
    function Lightness() {
    }
    Lightness.brighter = brighter_1.default;
    Lightness.darker = darker_1.default;
    Lightness.difference = difference_1.default;
    return Lightness;
}());
exports.default = Lightness;
//# sourceMappingURL=lightness.js.map

/***/ }),

/***/ "./lib/model/color/collection/modifier/lightness/brighter.js":
/*!*******************************************************************!*\
  !*** ./lib/model/color/collection/modifier/lightness/brighter.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = __webpack_require__(/*! ../../../../color */ "./lib/model/color.js");
/**
 * Ensures that the selected color is lighter than a reference color.
 */
var Brighter = /** @class */ (function () {
    function Brighter(primaryCollection, secondaryCollection, difference) {
        this.pickedColors = {};
        this.primaryCollection = primaryCollection;
        this.secondaryCollection = secondaryCollection;
        this.difference = difference;
    }
    Brighter.prototype.get = function (random) {
        if (this.pickedColors[random.seed]) {
            return this.pickedColors[random.seed];
        }
        var primaryColor = this.primaryCollection.get(random);
        var secondaryColor = this.secondaryCollection.get(random);
        var primaryColorHsv = primaryColor.hsv;
        var secondaryColorHsv = secondaryColor.hsv;
        if (primaryColorHsv[2] >= secondaryColorHsv[2] + this.difference) {
            return (this.pickedColors[random.seed] = primaryColor);
        }
        primaryColorHsv[2] = secondaryColorHsv[2] + this.difference;
        if (primaryColorHsv[2] > 360) {
            primaryColorHsv[2] = 360;
        }
        // Create new color instance and preserve alpha
        this.pickedColors[random.seed] = new color_1.default('hsv(' + primaryColorHsv.join(',') + ')');
        this.pickedColors[random.seed].alpha = primaryColor.alpha;
        return this.pickedColors[random.seed];
    };
    return Brighter;
}());
exports.default = Brighter;
//# sourceMappingURL=brighter.js.map

/***/ }),

/***/ "./lib/model/color/collection/modifier/lightness/darker.js":
/*!*****************************************************************!*\
  !*** ./lib/model/color/collection/modifier/lightness/darker.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = __webpack_require__(/*! ../../../../color */ "./lib/model/color.js");
/**
 * Ensures that the selected color is darker than a reference color.
 */
var Darker = /** @class */ (function () {
    function Darker(primaryCollection, secondaryCollection, difference) {
        this.pickedColors = {};
        this.primaryCollection = primaryCollection;
        this.secondaryCollection = secondaryCollection;
        this.difference = difference;
    }
    Darker.prototype.get = function (random) {
        if (this.pickedColors[random.seed]) {
            return this.pickedColors[random.seed];
        }
        var primaryColor = this.primaryCollection.get(random);
        var secondaryColor = this.secondaryCollection.get(random);
        var primaryColorHsv = primaryColor.hsv;
        var secondaryColorHsv = secondaryColor.hsv;
        if (primaryColorHsv[2] <= secondaryColorHsv[2] - this.difference) {
            return (this.pickedColors[random.seed] = primaryColor);
        }
        primaryColorHsv[2] = secondaryColorHsv[2] - this.difference;
        if (primaryColorHsv[2] < 0) {
            primaryColorHsv[2] = 0;
        }
        // Create new color instance and preserve alpha
        this.pickedColors[random.seed] = new color_1.default('hsv(' + primaryColorHsv.join(',') + ')');
        this.pickedColors[random.seed].alpha = primaryColor.alpha;
        return this.pickedColors[random.seed];
    };
    return Darker;
}());
exports.default = Darker;
//# sourceMappingURL=darker.js.map

/***/ }),

/***/ "./lib/model/color/collection/modifier/lightness/difference.js":
/*!*********************************************************************!*\
  !*** ./lib/model/color/collection/modifier/lightness/difference.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var brighter_1 = __webpack_require__(/*! ./brighter */ "./lib/model/color/collection/modifier/lightness/brighter.js");
var darker_1 = __webpack_require__(/*! ./darker */ "./lib/model/color/collection/modifier/lightness/darker.js");
/**
 * Ensures that the selected color is darker or brighter than a reference color.
 */
var Difference = /** @class */ (function () {
    /**
     * @param colors
     * @param reference
     * @param difference
     */
    function Difference(primaryCollection, secondaryCollection, difference) {
        this.pickedColors = {};
        this.primaryCollection = primaryCollection;
        this.secondaryCollection = secondaryCollection;
        this.brighter = new brighter_1.default(primaryCollection, secondaryCollection, difference);
        this.darker = new darker_1.default(primaryCollection, secondaryCollection, difference);
    }
    /**
     * Returns a color
     *
     * @param random
     */
    Difference.prototype.get = function (random) {
        if (this.pickedColors[random.seed]) {
            return this.pickedColors[random.seed];
        }
        var primaryColor = this.primaryCollection.get(random);
        var secondaryColor = this.secondaryCollection.get(random);
        var primaryColorHsv = primaryColor.hsv;
        var secondaryColorHsv = secondaryColor.hsv;
        if (primaryColorHsv[2] <= secondaryColorHsv[2]) {
            return (this.pickedColors[random.seed] = this.darker.get(random));
        }
        else {
            return (this.pickedColors[random.seed] = this.brighter.get(random));
        }
    };
    return Difference;
}());
exports.default = Difference;
//# sourceMappingURL=difference.js.map

/***/ }),

/***/ "./lib/model/color/collection/modifier/opacity.js":
/*!********************************************************!*\
  !*** ./lib/model/color/collection/modifier/opacity.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var variant_1 = __webpack_require__(/*! ./opacity/variant */ "./lib/model/color/collection/modifier/opacity/variant.js");
var Opacity = /** @class */ (function () {
    function Opacity() {
    }
    Opacity.variant = variant_1.default;
    return Opacity;
}());
exports.default = Opacity;
//# sourceMappingURL=opacity.js.map

/***/ }),

/***/ "./lib/model/color/collection/modifier/opacity/variant.js":
/*!****************************************************************!*\
  !*** ./lib/model/color/collection/modifier/opacity/variant.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = __webpack_require__(/*! ../../../../color */ "./lib/model/color.js");
/**
 * Returns the color in different transparency.
 */
var Variant = /** @class */ (function () {
    function Variant(collection, variants) {
        this.pickedColors = {};
        this.collection = collection;
        this.variants = variants;
    }
    Variant.prototype.get = function (random) {
        if (this.pickedColors[random.seed]) {
            return this.pickedColors[random.seed];
        }
        var color = this.collection.get(random);
        this.pickedColors[random.seed] = new color_1.default('rgb(' + color.rgb.join(',') + ')');
        this.pickedColors[random.seed].alpha = random.pickone(this.variants);
        return this.pickedColors[random.seed];
    };
    return Variant;
}());
exports.default = Variant;
//# sourceMappingURL=variant.js.map

/***/ }),

/***/ "./lib/model/sprite.js":
/*!*****************************!*\
  !*** ./lib/model/sprite.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = __webpack_require__(/*! ./color */ "./lib/model/color.js");
var collection_1 = __webpack_require__(/*! ./sprite/collection */ "./lib/model/sprite/collection.js");
var Sprite = /** @class */ (function () {
    /**
     * @param paths
     * @param colorCollection
     * @param chance
     */
    function Sprite(groups, colorCollection, chance) {
        if (colorCollection === void 0) { colorCollection = null; }
        if (chance === void 0) { chance = 100; }
        this.groups = groups;
        this.colorCollection = colorCollection;
        this.chance = chance;
    }
    /**
     * Creates an sprite
     *
     * @param random
     */
    Sprite.prototype.get = function (random) {
        var _this = this;
        var result = '';
        if (random.bool(this.chance)) {
            result = random.pickone(this.groups);
            if (this.colorCollection) {
                var color_2 = this.colorCollection.get(random);
                result = result.replace(/(stroke|fill)=["'](.*?)["']/gi, function (match, name, value) {
                    return name + '="' + _this.calculateColor(value, color_2) + '"';
                });
            }
        }
        return result;
    };
    /**
     * Calculates the target color
     *
     * @param sourceColor
     * @param targetColor
     */
    Sprite.prototype.calculateColor = function (sourceColor, targetColor) {
        var sourceColorRgba = new color_1.default(sourceColor).rgba;
        var targetColorRgba = targetColor.rgba;
        sourceColorRgba[0] = Math.round((255 - targetColorRgba[0]) * (sourceColorRgba[0] / 255) + targetColorRgba[0]);
        sourceColorRgba[1] = Math.round((255 - targetColorRgba[1]) * (sourceColorRgba[1] / 255) + targetColorRgba[1]);
        sourceColorRgba[2] = Math.round((255 - targetColorRgba[2]) * (sourceColorRgba[2] / 255) + targetColorRgba[2]);
        sourceColorRgba[3] = Math.round(sourceColorRgba[3] / 1 * targetColorRgba[3] * 100) / 100;
        var newColor = 'rgba(' + sourceColorRgba.join(',') + ')';
        return sourceColorRgba[3] != 1 ? newColor : new color_1.default(newColor).hex;
    };
    Sprite.collection = collection_1.default;
    return Sprite;
}());
exports.default = Sprite;
//# sourceMappingURL=sprite.js.map

/***/ }),

/***/ "./lib/model/sprite/collection.js":
/*!****************************************!*\
  !*** ./lib/model/sprite/collection.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Collection = /** @class */ (function () {
    /**
     * @param sprites
     */
    function Collection(sprites, size, options) {
        if (options === void 0) { options = {}; }
        this.sprites = [];
        this.pickedSprites = {};
        this.sprites = sprites;
        var defaultOptions = {
            svg: {
                xmlns: 'http://www.w3.org/2000/svg',
                'xmlns:xlink': 'http://www.w3.org/1999/xlink',
                viewBox: [0, 0, size, size].join(' '),
                version: 1.1,
                'shape-rendering': 'crispEdges'
            }
        };
        // Typeescript does not offer a Polyfill for `Object.assign`, but for Object spread syntax.
        this.options = {};
        this.options.svg = __assign({}, defaultOptions.svg, (options.svg || {}));
    }
    /**
     * Returns sprite set
     *
     * @param random
     */
    Collection.prototype.get = function (random) {
        return (this.pickedSprites[random.seed] =
            this.pickedSprites[random.seed] || this.sprites.map(function (sprite) { return sprite.get(random); }));
    };
    return Collection;
}());
exports.default = Collection;
//# sourceMappingURL=collection.js.map

/***/ }),

/***/ "./node_modules/pure-color/convert/hsv2rgb.js":
/*!****************************************************!*\
  !*** ./node_modules/pure-color/convert/hsv2rgb.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function hsv2rgb(hsv) {
  var h = hsv[0] / 60,
      s = hsv[1] / 100,
      v = hsv[2] / 100,
      hi = Math.floor(h) % 6;

  var f = h - Math.floor(h),
      p = 255 * v * (1 - s),
      q = 255 * v * (1 - (s * f)),
      t = 255 * v * (1 - (s * (1 - f))),
      v = 255 * v;

  switch(hi) {
    case 0:
      return [v, t, p];
    case 1:
      return [q, v, p];
    case 2:
      return [p, v, t];
    case 3:
      return [p, q, v];
    case 4:
      return [t, p, v];
    case 5:
      return [v, p, q];
  }
}

module.exports = hsv2rgb;

/***/ }),

/***/ "./node_modules/pure-color/convert/rgb2hex.js":
/*!****************************************************!*\
  !*** ./node_modules/pure-color/convert/rgb2hex.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var clamp = __webpack_require__(/*! ../util/clamp */ "./node_modules/pure-color/util/clamp.js");

function componentToHex(c) {
  var value = Math.round(clamp(c, 0, 255));
  var hex   = value.toString(16);

  return hex.length == 1 ? "0" + hex : hex;
}

function rgb2hex(rgb) {
  var alpha = rgb.length === 4 ? componentToHex(rgb[3] * 255) : "";

  return "#" + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]) + alpha;
}

module.exports = rgb2hex;

/***/ }),

/***/ "./node_modules/pure-color/convert/rgb2hsv.js":
/*!****************************************************!*\
  !*** ./node_modules/pure-color/convert/rgb2hsv.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function rgb2hsv(rgb) {
  var r = rgb[0],
      g = rgb[1],
      b = rgb[2],
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      delta = max - min,
      h, s, v;

  if (max == 0)
    s = 0;
  else
    s = (delta/max * 1000)/10;

  if (max == min)
    h = 0;
  else if (r == max)
    h = (g - b) / delta;
  else if (g == max)
    h = 2 + (b - r) / delta;
  else if (b == max)
    h = 4 + (r - g) / delta;

  h = Math.min(h * 60, 360);

  if (h < 0)
    h += 360;

  v = ((max / 255) * 1000) / 10;

  return [h, s, v];
}

module.exports = rgb2hsv;

/***/ }),

/***/ "./node_modules/pure-color/parse/hex.js":
/*!**********************************************!*\
  !*** ./node_modules/pure-color/parse/hex.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function expand(hex) {
  var result = "#";

  for (var i = 1; i < hex.length; i++) {
    var val = hex.charAt(i);
    result += val + val;
  }

  return result;
}

function hex(hex) {
  // #RGB or #RGBA
  if(hex.length === 4 || hex.length === 5) {
    hex = expand(hex);
  }

  var rgb = [
    parseInt(hex.substring(1,3), 16),
    parseInt(hex.substring(3,5), 16),
    parseInt(hex.substring(5,7), 16)
  ];

  // #RRGGBBAA
  if (hex.length === 9) {
    var alpha = parseFloat((parseInt(hex.substring(7,9), 16) / 255).toFixed(2));
    rgb.push(alpha);
  }

  return rgb;
}

module.exports = hex;

/***/ }),

/***/ "./node_modules/pure-color/util/clamp.js":
/*!***********************************************!*\
  !*** ./node_modules/pure-color/util/clamp.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function clamp(val, min, max) {
  return Math.min(Math.max(val, min), max);
}

module.exports = clamp;

/***/ }),

/***/ "./node_modules/seedrandom/seedrandom.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/seedrandom.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*
Copyright 2014 David Bau.

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

*/

(function (pool, math) {
//
// The following constants are related to IEEE 754 limits.
//
var global = this,
    width = 256,        // each RC4 output is 0 <= x < 256
    chunks = 6,         // at least six RC4 outputs for each double
    digits = 52,        // there are 52 significant digits in a double
    rngname = 'random', // rngname: name for Math.random and Math.seedrandom
    startdenom = math.pow(width, chunks),
    significance = math.pow(2, digits),
    overflow = significance * 2,
    mask = width - 1,
    nodecrypto;         // node.js crypto module, initialized at the bottom.

//
// seedrandom()
// This is the seedrandom function described above.
//
function seedrandom(seed, options, callback) {
  var key = [];
  options = (options == true) ? { entropy: true } : (options || {});

  // Flatten the seed string or build one from local entropy if needed.
  var shortseed = mixkey(flatten(
    options.entropy ? [seed, tostring(pool)] :
    (seed == null) ? autoseed() : seed, 3), key);

  // Use the seed to initialize an ARC4 generator.
  var arc4 = new ARC4(key);

  // This function returns a random double in [0, 1) that contains
  // randomness in every bit of the mantissa of the IEEE 754 value.
  var prng = function() {
    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48
        d = startdenom,                 //   and denominator d = 2 ^ 48.
        x = 0;                          //   and no 'extra last byte'.
    while (n < significance) {          // Fill up all significant digits by
      n = (n + x) * width;              //   shifting numerator and
      d *= width;                       //   denominator and generating a
      x = arc4.g(1);                    //   new least-significant-byte.
    }
    while (n >= overflow) {             // To avoid rounding up, before adding
      n /= 2;                           //   last byte, shift everything
      d /= 2;                           //   right using integer math until
      x >>>= 1;                         //   we have exactly the desired bits.
    }
    return (n + x) / d;                 // Form the number within [0, 1).
  };

  prng.int32 = function() { return arc4.g(4) | 0; }
  prng.quick = function() { return arc4.g(4) / 0x100000000; }
  prng.double = prng;

  // Mix the randomness into accumulated entropy.
  mixkey(tostring(arc4.S), pool);

  // Calling convention: what to return as a function of prng, seed, is_math.
  return (options.pass || callback ||
      function(prng, seed, is_math_call, state) {
        if (state) {
          // Load the arc4 state from the given state if it has an S array.
          if (state.S) { copy(state, arc4); }
          // Only provide the .state method if requested via options.state.
          prng.state = function() { return copy(arc4, {}); }
        }

        // If called as a method of Math (Math.seedrandom()), mutate
        // Math.random because that is how seedrandom.js has worked since v1.0.
        if (is_math_call) { math[rngname] = prng; return seed; }

        // Otherwise, it is a newer calling convention, so return the
        // prng directly.
        else return prng;
      })(
  prng,
  shortseed,
  'global' in options ? options.global : (this == math),
  options.state);
}
math['seed' + rngname] = seedrandom;

//
// ARC4
//
// An ARC4 implementation.  The constructor takes a key in the form of
// an array of at most (width) integers that should be 0 <= x < (width).
//
// The g(count) method returns a pseudorandom integer that concatenates
// the next (count) outputs from ARC4.  Its return value is a number x
// that is in the range 0 <= x < (width ^ count).
//
function ARC4(key) {
  var t, keylen = key.length,
      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];

  // The empty key [] is treated as [0].
  if (!keylen) { key = [keylen++]; }

  // Set up S using the standard key scheduling algorithm.
  while (i < width) {
    s[i] = i++;
  }
  for (i = 0; i < width; i++) {
    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];
    s[j] = t;
  }

  // The "g" method returns the next (count) outputs as one number.
  (me.g = function(count) {
    // Using instance members instead of closure state nearly doubles speed.
    var t, r = 0,
        i = me.i, j = me.j, s = me.S;
    while (count--) {
      t = s[i = mask & (i + 1)];
      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];
    }
    me.i = i; me.j = j;
    return r;
    // For robust unpredictability, the function call below automatically
    // discards an initial batch of values.  This is called RC4-drop[256].
    // See http://google.com/search?q=rsa+fluhrer+response&btnI
  })(width);
}

//
// copy()
// Copies internal state of ARC4 to or from a plain object.
//
function copy(f, t) {
  t.i = f.i;
  t.j = f.j;
  t.S = f.S.slice();
  return t;
};

//
// flatten()
// Converts an object tree to nested arrays of strings.
//
function flatten(obj, depth) {
  var result = [], typ = (typeof obj), prop;
  if (depth && typ == 'object') {
    for (prop in obj) {
      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}
    }
  }
  return (result.length ? result : typ == 'string' ? obj : obj + '\0');
}

//
// mixkey()
// Mixes a string seed into a key that is an array of integers, and
// returns a shortened string seed that is equivalent to the result key.
//
function mixkey(seed, key) {
  var stringseed = seed + '', smear, j = 0;
  while (j < stringseed.length) {
    key[mask & j] =
      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));
  }
  return tostring(key);
}

//
// autoseed()
// Returns an object for autoseeding, using window.crypto and Node crypto
// module if available.
//
function autoseed() {
  try {
    var out;
    if (nodecrypto && (out = nodecrypto.randomBytes)) {
      // The use of 'out' to remember randomBytes makes tight minified code.
      out = out(width);
    } else {
      out = new Uint8Array(width);
      (global.crypto || global.msCrypto).getRandomValues(out);
    }
    return tostring(out);
  } catch (e) {
    var browser = global.navigator,
        plugins = browser && browser.plugins;
    return [+new Date, global, plugins, global.screen, tostring(pool)];
  }
}

//
// tostring()
// Converts an array of charcodes to a string
//
function tostring(a) {
  return String.fromCharCode.apply(0, a);
}

//
// When seedrandom.js is loaded, we immediately mix a few bits
// from the built-in RNG into the entropy pool.  Because we do
// not want to interfere with deterministic PRNG state later,
// seedrandom will not call math.random on its own again after
// initialization.
//
mixkey(math.random(), pool);

//
// Nodejs and AMD support: export the implementation as a module using
// either convention.
//
if ((typeof module) == 'object' && module.exports) {
  module.exports = seedrandom;
  // When in node.js, try using crypto package for autoseeding.
  try {
    nodecrypto = __webpack_require__(/*! crypto */ 0);
  } catch (ex) {}
} else if (true) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return seedrandom; }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}

// End anonymous scope, and pass initial values.
})(
  [],     // pool: entropy pool starts empty
  Math    // math: package containing random, pow, and seedrandom
);


/***/ }),

/***/ 0:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ })

/******/ })["default"];
});
//# sourceMappingURL=avatars.js.map