"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = require("./color");
var collection_1 = require("./sprite/collection");
var Sprite = /** @class */ (function () {
    /**
     * @param paths
     * @param colorCollection
     * @param chance
     */
    function Sprite(groups, colorCollection, chance) {
        if (colorCollection === void 0) { colorCollection = null; }
        if (chance === void 0) { chance = 100; }
        this.groups = groups;
        this.colorCollection = colorCollection;
        this.chance = chance;
    }
    /**
     * Creates an sprite
     *
     * @param random
     */
    Sprite.prototype.get = function (random) {
        var _this = this;
        var result = '';
        if (random.bool(this.chance)) {
            result = random.pickone(this.groups);
            if (this.colorCollection) {
                var color_2 = this.colorCollection.get(random);
                result = result.replace(/(stroke|fill)=["'](.*?)["']/gi, function (match, name, value) {
                    return name + '="' + _this.calculateColor(value, color_2) + '"';
                });
            }
        }
        return result;
    };
    /**
     * Calculates the target color
     *
     * @param sourceColor
     * @param targetColor
     */
    Sprite.prototype.calculateColor = function (sourceColor, targetColor) {
        var sourceColorRgba = new color_1.default(sourceColor).rgba;
        var targetColorRgba = targetColor.rgba;
        sourceColorRgba[0] = Math.round((255 - targetColorRgba[0]) * (sourceColorRgba[0] / 255) + targetColorRgba[0]);
        sourceColorRgba[1] = Math.round((255 - targetColorRgba[1]) * (sourceColorRgba[1] / 255) + targetColorRgba[1]);
        sourceColorRgba[2] = Math.round((255 - targetColorRgba[2]) * (sourceColorRgba[2] / 255) + targetColorRgba[2]);
        sourceColorRgba[3] = Math.round(sourceColorRgba[3] / 1 * targetColorRgba[3] * 100) / 100;
        var newColor = 'rgba(' + sourceColorRgba.join(',') + ')';
        return sourceColorRgba[3] != 1 ? newColor : new color_1.default(newColor).hex;
    };
    Sprite.collection = collection_1.default;
    return Sprite;
}());
exports.default = Sprite;
//# sourceMappingURL=sprite.js.map