"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = require("./model/color");
var sprite_1 = require("./model/sprite");
var random_1 = require("./helper/random");
var Avatars = /** @class */ (function () {
    /**
     * @param spriteCollection
     */
    function Avatars(spriteCollection) {
        this.spriteCollection = spriteCollection;
    }
    /**
     * Creates an avatar
     *
     * @param seed
     */
    Avatars.prototype.create = function (seed) {
        return '<svg ' + this.getSvgAttributes() + '>' + this.getSvgPaths(new random_1.default(seed)) + '</svg>';
    };
    /**
     * Get SVG attributes
     */
    Avatars.prototype.getSvgAttributes = function () {
        var attributes = __assign({}, (this.spriteCollection.options.svg || {}));
        var _a = attributes.viewBox
            .replace(/[^\d,]/g, '')
            .split(',')
            .map(function (val) { return parseInt(val); }), x = _a[0], y = _a[1];
        return Object.keys(attributes)
            .map(function (key) {
            return key + '="' + attributes[key] + '"';
        })
            .join(' ');
    };
    /**
     * Get generated SVG paths
     *
     * @param random
     */
    Avatars.prototype.getSvgPaths = function (random) {
        return this.spriteCollection.get(random).join('');
    };
    Avatars.model = {
        color: color_1.default,
        sprite: sprite_1.default
    };
    return Avatars;
}());
exports.default = Avatars;
//# sourceMappingURL=index.js.map